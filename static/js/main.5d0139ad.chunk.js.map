{"version":3,"sources":["App/App.tsx","action/index.tsx","reducers/completeReducer.tsx","reducers/incompleteReducer.tsx","reducers/index.tsx","index.tsx"],"names":["connect","state","complete","incomplete","deleteTodo","todo","type","markComplete","markIncomplete","input","useRef","renderList","looper","ListGroup","variant","className","map","index","ListGroupItem","style","display","justifyContent","onClick","Container","InputGroup","FormControl","placeholder","ref","Append","Button","current","val","value","addTodo","initialState","completeReducer","action","filter","incompleteReducer","combineReducers","ReactDOM","render","StrictMode","store","createStore","rootReducer","document","getElementById"],"mappings":"kPA6FeA,eAPS,SAACC,GACxB,MAAO,CACNC,SAAUD,EAAMC,SAChBC,WAAYF,EAAME,cAIoB,CACvCC,WC1EkD,SAACC,GACnD,MAAO,CACNC,KAAM,cACND,SDwEDE,aCzFsD,SAACF,GACvD,MAAO,CACNC,KAAM,gBACND,SDuFDG,eCnF0D,SAACH,GAC3D,MAAO,CACNC,KAAM,kBACND,UD6EaL,EA7EoB,SAAC,GAM7B,IALNE,EAKK,EALLA,SACAC,EAIK,EAJLA,WACAC,EAGK,EAHLA,WACAG,EAEK,EAFLA,aACAC,EACK,EADLA,eAEMC,EAAQC,iBAAyB,MAEjCC,EAAa,SAACL,GACnB,IAAMM,EAAkB,aAATN,EAAsBJ,EAAWC,EAChD,OACC,eAACU,EAAA,EAAD,CAAWC,QAAQ,QAAQC,UAAU,MAArC,UACC,6BAAKT,IACJM,EAAOI,KAAI,SAACX,EAAMY,GAClB,OACC,eAACC,EAAA,EAAD,CAECJ,QAAkB,aAATR,EAAsB,UAAY,SAC3Ca,MAAO,CAAEC,QAAS,OAAQC,eAAgB,iBAH3C,UAKC,8BAAMhB,IACN,gCACC,mBACCU,UAAS,iBACC,aAATT,EAAsB,QAAU,QADxB,QAGTgB,QAAS,WACC,aAAThB,EACGE,EAAeH,GACfE,EAAaF,MAGlB,mBACCU,UAAU,mBACVO,QAAS,kBAAMlB,EAAWC,WAlBvBY,UAoCX,OACC,eAACM,EAAA,EAAD,WACC,eAACC,EAAA,EAAD,CAAYT,UAAU,MAAtB,UACC,cAACU,EAAA,EAAD,CAAaC,YAAY,OAAOC,IAAKlB,IACrC,cAACe,EAAA,EAAWI,OAAZ,UACC,eAACC,EAAA,EAAD,CAAQf,QAAQ,YAAYQ,QAAS,kBAbzB,WACf,GAAIb,EAAMqB,QAAS,CAClB,IAAMC,EAAMtB,EAAMqB,QAAQE,MAC1BvB,EAAMqB,QAAQE,MAAQ,GACtBxB,EAAeuB,IAS8BE,IAA3C,UACC,mBAAGlB,UAAU,qBADd,cAMDJ,EAAW,cACXA,EAAW,kB,cEzETuB,EAAyB,GAiBhBC,EAZX,WAAmC,IAAlClC,EAAiC,uDAAzBiC,EAAcE,EAAW,uCACrC,OAAQA,EAAO9B,MACd,IAAK,gBACJ,MAAM,GAAN,mBAAWL,GAAX,CAAkBmC,EAAO/B,OAC1B,IAAK,kBACL,IAAK,cACJ,OAAO,YAAIJ,EAAMoC,QAAO,SAAChC,GAAD,OAAUA,IAAS+B,EAAO/B,SACnD,QACC,OAAO,YAAIJ,KCVRiC,EAA2B,GAiBlBI,EAZX,WAAmC,IAAlCrC,EAAiC,uDAAzBiC,EAAcE,EAAW,uCACrC,OAAQA,EAAO9B,MACd,IAAK,kBACJ,MAAM,GAAN,mBAAWL,GAAX,CAAkBmC,EAAO/B,OAC1B,IAAK,cACL,IAAK,gBACJ,OAAO,YAAIJ,EAAMoC,QAAO,SAAChC,GAAD,OAAUA,IAAS+B,EAAO/B,SACnD,QACC,OAAO,YAAIJ,KCnBCsC,cAAgB,CAC9BrC,WACAC,e,MCEDqC,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,IAAD,CAAUC,MAAOC,YAAYC,GAA7B,SACC,cAAC,EAAD,QAGFC,SAASC,eAAe,W","file":"static/js/main.5d0139ad.chunk.js","sourcesContent":["import React, { useRef } from \"react\";\r\n\r\nimport {\r\n\tContainer,\r\n\tListGroup,\r\n\tListGroupItem,\r\n\tInputGroup,\r\n\tFormControl,\r\n\tButton,\r\n} from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { deleteTodo, markComplete, markIncomplete } from \"action/index\";\r\nimport storeType from \"types/storeType\";\r\nimport AppPropType from \"./AppPropType\";\r\n\r\nconst App: React.FC<AppPropType> = ({\r\n\tcomplete,\r\n\tincomplete,\r\n\tdeleteTodo,\r\n\tmarkComplete,\r\n\tmarkIncomplete,\r\n}) => {\r\n\tconst input = useRef<HTMLInputElement>(null);\r\n\r\n\tconst renderList = (type: \"Complete\" | \"Incomplete\") => {\r\n\t\tconst looper = type === \"Complete\" ? complete : incomplete;\r\n\t\treturn (\r\n\t\t\t<ListGroup variant=\"flush\" className=\"m-2\">\r\n\t\t\t\t<h3>{type}</h3>\r\n\t\t\t\t{looper.map((todo, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<ListGroupItem\r\n\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\tvariant={type === \"Complete\" ? \"success\" : \"danger\"}\r\n\t\t\t\t\t\t\tstyle={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<div>{todo}</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\tclassName={`fas fa-${\r\n\t\t\t\t\t\t\t\t\t\ttype === \"Complete\" ? \"minus\" : \"check\"\r\n\t\t\t\t\t\t\t\t\t} m-2`}\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\ttype === \"Complete\"\r\n\t\t\t\t\t\t\t\t\t\t\t? markIncomplete(todo)\r\n\t\t\t\t\t\t\t\t\t\t\t: markComplete(todo);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t></i>\r\n\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\tclassName=\"fas fa-trash m-2\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => deleteTodo(todo)}\r\n\t\t\t\t\t\t\t\t></i>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</ListGroupItem>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</ListGroup>\r\n\t\t);\r\n\t};\r\n\r\n\tconst addTodo = () => {\r\n\t\tif (input.current) {\r\n\t\t\tconst val = input.current.value;\r\n\t\t\tinput.current.value = \"\";\r\n\t\t\tmarkIncomplete(val);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<InputGroup className=\"m-3\">\r\n\t\t\t\t<FormControl placeholder=\"Todo\" ref={input} />\r\n\t\t\t\t<InputGroup.Append>\r\n\t\t\t\t\t<Button variant=\"secondary\" onClick={() => addTodo()}>\r\n\t\t\t\t\t\t<i className=\"fas fa-plus mr-3\"></i>\r\n\t\t\t\t\t\tAdd\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</InputGroup.Append>\r\n\t\t\t</InputGroup>\r\n\t\t\t{renderList(\"Incomplete\")}\r\n\t\t\t{renderList(\"Complete\")}\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state: storeType) => {\r\n\treturn {\r\n\t\tcomplete: state.complete,\r\n\t\tincomplete: state.incomplete,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n\tdeleteTodo,\r\n\tmarkComplete,\r\n\tmarkIncomplete,\r\n})(App);\r\n","import {\r\n\tdeleteTodoActionCreator,\r\n\tmarkCompleteActionCreator,\r\n\tmarkIncompleteActionCreator,\r\n} from \"types/actionCreatorType\";\r\n\r\nexport const markComplete: markCompleteActionCreator = (todo) => {\r\n\treturn {\r\n\t\ttype: \"MARK_COMPLETE\",\r\n\t\ttodo,\r\n\t};\r\n};\r\n\r\nexport const markIncomplete: markIncompleteActionCreator = (todo) => {\r\n\treturn {\r\n\t\ttype: \"MARK_INCOMPLETE\",\r\n\t\ttodo,\r\n\t};\r\n};\r\n\r\nexport const deleteTodo: deleteTodoActionCreator = (todo) => {\r\n\treturn {\r\n\t\ttype: \"DELETE_TODO\",\r\n\t\ttodo,\r\n\t};\r\n};\r\n","import { Reducer } from \"redux\";\r\nimport {\r\n\tdeleteTodoAction,\r\n\tmarkCompleteAction,\r\n\tmarkIncompleteAction,\r\n} from \"types/actionsType\";\r\nimport { complete } from \"types/storeType\";\r\n\r\nconst initialState: complete = [];\r\n\r\nconst completeReducer: Reducer<\r\n\tcomplete,\r\n\tdeleteTodoAction | markCompleteAction | markIncompleteAction\r\n> = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"MARK_COMPLETE\":\r\n\t\t\treturn [...state, action.todo];\r\n\t\tcase \"MARK_INCOMPLETE\":\r\n\t\tcase \"DELETE_TODO\":\r\n\t\t\treturn [...state.filter((todo) => todo !== action.todo)];\r\n\t\tdefault:\r\n\t\t\treturn [...state];\r\n\t}\r\n};\r\n\r\nexport default completeReducer;\r\n","import { act } from \"react-dom/test-utils\";\r\nimport { Reducer } from \"redux\";\r\n\r\nimport {\r\n\tdeleteTodoAction,\r\n\tmarkCompleteAction,\r\n\tmarkIncompleteAction,\r\n} from \"types/actionsType\";\r\n\r\nimport { incomplete } from \"types/storeType\";\r\n\r\nconst initialState: incomplete = [];\r\n\r\nconst incompleteReducer: Reducer<\r\n\tincomplete,\r\n\tdeleteTodoAction | markCompleteAction | markIncompleteAction\r\n> = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"MARK_INCOMPLETE\":\r\n\t\t\treturn [...state, action.todo];\r\n\t\tcase \"DELETE_TODO\":\r\n\t\tcase \"MARK_COMPLETE\":\r\n\t\t\treturn [...state.filter((todo) => todo !== action.todo)];\r\n\t\tdefault:\r\n\t\t\treturn [...state];\r\n\t}\r\n};\r\n\r\nexport default incompleteReducer;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport complete from \"./completeReducer\";\r\nimport incomplete from \"./incompleteReducer\";\r\n\r\nexport default combineReducers({\r\n\tcomplete,\r\n\tincomplete,\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App/App\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nimport rootReducer from \"reducers\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={createStore(rootReducer)}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}